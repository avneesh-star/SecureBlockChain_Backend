// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecureBlockChain_Backend.Data;

#nullable disable

namespace SecureBlockChain_Backend.Migrations
{
    [DbContext(typeof(BlockChainsDbContext))]
    partial class BlockChainsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SecureBlockChain_Backend.Models.ProductInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CreationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCreator")
                        .HasColumnType("int");

                    b.Property<string>("ProductID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProductsInfos");
                });

            modelBuilder.Entity("SecureBlockChain_Backend.Models.SchemeInfo", b =>
                {
                    b.Property<int>("ShcemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShcemeId"), 1L, 1);

                    b.Property<string>("ShcemeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShcemeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShcemeId");

                    b.ToTable("schemeInfos");
                });

            modelBuilder.Entity("SecureBlockChain_Backend.Models.StoreBlockChains", b =>
                {
                    b.Property<int>("BlockChainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlockChainID"), 1L, 1);

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.HasKey("BlockChainID");

                    b.ToTable("AllBlockChains");
                });

            modelBuilder.Entity("SecureBlockChain_Backend.Models.SupplyBlock", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlockId"), 1L, 1);

                    b.Property<string>("BlockAddedTimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChainId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Nounce")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PreviousHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlockId");

                    b.ToTable("SupplyBlocks", (string)null);
                });

            modelBuilder.Entity("SecureBlockChain_Backend.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("SchemeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingTransaction");
                });

            modelBuilder.Entity("SecureBlockChain_Backend.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("AccessRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssociatedProductTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("SecureBlockChain_Backend.Models.Verifier_1Block", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlockId"), 1L, 1);

                    b.Property<string>("BlockAddedTimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChainId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Nounce")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PreviousHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlockId");

                    b.ToTable("Verifier_1Blocks", (string)null);
                });

            modelBuilder.Entity("SecureBlockChain_Backend.Models.Verifier_2Block", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlockId"), 1L, 1);

                    b.Property<string>("BlockAddedTimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChainId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Nounce")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PreviousHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlockId");

                    b.ToTable("Verifier_2Blocks", (string)null);
                });

            modelBuilder.Entity("SecureBlockChain_Backend.Models.Verifier_3Block", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlockId"), 1L, 1);

                    b.Property<string>("BlockAddedTimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChainId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Nounce")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PreviousHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlockId");

                    b.ToTable("Verifier_3Blocks", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
